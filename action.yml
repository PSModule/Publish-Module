name: 'Publish-Module'
description: 'Publish a PowerShell module to the PowerShell Gallery'
branding:
  icon: activity
  color: blue

inputs:
  APIKey:
    description: 'API Key for the PowerShell Gallery.'
    required: true
  Path:
    description: 'Path to the module to publish.'
    required: true
  Verbose:
    description: 'Enable verbose output.'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Run Publish-Module
      shell: pwsh
      run: |
        # Inline script
        Write-Output '::group::Environment'
          Write-Output '-------------------------------------------'
          Write-Output 'Environment variables:'
          Get-ChildItem Env: | Sort-Object -Property Name
          Write-Output '-------------------------------------------'
          Write-Output 'Current directory:'
          Get-Location
          Write-Output '-------------------------------------------'
          Write-Output 'Directory contents:'
          Get-ChildItem . -Recurse | Select-Object -ExpandProperty FullName | Sort-Object
          Write-Output '-------------------------------------------'
        Write-Output '::endgroup::'

        Write-Output '::group::Publish-Module'

          Write-Output '-------------------------------------------'
          Write-Output 'Action inputs:'
          $params = @{
              APIKey  = '${{ inputs.APIKey }}'
              Verbose = [System.Convert]::ToBoolean('${{ inputs.Verbose }}')
          }
          $params.GetEnumerator() | Sort-Object -Property Name

          Write-Output '-------------------------------------------'

          . "$env:GITHUB_ACTION_PATH\scripts\main.ps1" @params

        Write-Output '::endgroup::'

        Write-Output '::group::Environment'
          Write-Output '-------------------------------------------'
          Write-Output 'Environment variables:'
          Get-ChildItem Env: | Sort-Object -Property Name
          Write-Output '-------------------------------------------'
          Write-Output 'Current directory:'
          Get-Location
          Write-Output '-------------------------------------------'
          Write-Output 'Directory contents:'
          Get-ChildItem . | Select-Object -ExpandProperty FullName | Sort-Object
          Write-Output '-------------------------------------------'
        Write-Output '::endgroup::'
